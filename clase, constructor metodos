class Hero {         // clase (dentro puede haber constructor u otro método personalizado)
    constructor(health) {    // función contructor
        this.health = health;   // propiedad de una instancia de la clase Hero 
    }
   takeDamage(damage) {       // nuevo método de la clase hero 
        this.health -= damage;   // damage resta a health
    }
}

const Hero = require('./Hero');

class Warrior extends Hero {   // hereda el comportamiento de su classe ppal Hero usando extends
  constructor(health) {             // usamos el contructor para añadir propiedades
    super(health);                 // super llama al construcor de Hero
    this.rage = 0;          // nueva propiedad llamada rage(furia)
    }
   takeDamage(damage) {         // método de warrior
        super.takeDamage(damage); //super llama a método takeDamage de la clase Hero
        this.rage += 1;            // añade uno cuando health disminuye
    
    }
}
